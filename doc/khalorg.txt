*nvim-khalorg.txt*  Neovim documentation

Plugin to interact with `khalorg`: an interface between the org mode and the
`khal` cli calendar. If you never heard of `khalorg`, take a look at the gitHub
page: https://github.com/BartSte/khalorg

CONTENTS                                              *nvim-khalorg-contents*

1. Introduction                                     nvim-khalorg-introduction
2. Installation                                     nvim-khalorg-installation
3. Configuration                                    nvim-khalorg-configuration
4. Usage                                            nvim-khalorg-usage
5. Functions                                        nvim-khalorg-functions
6. Troubleshooting                                  nvim-khalorg-troubleshooting
7. Contributing                                     nvim-khalorg-contributing
8. License                                          nvim-khalorg-license

==============================================================================
1. Introduction                                             *nvim-khalorg-introduction*

The `nvim-khalorg` plugin sends folds in an org document to khalorg through
stdin. The functions are exposed through `nvim-orgmode` its custom export option.

==============================================================================
2. Installation                                             *nvim-khalorg-installation*

Install using your favorite plugin manager. For example packer:

```lua
use {'nvim-treesitter/nvim-treesitter'}
use {'nvim-orgmode/orgmode'}
use {'BartSte/nvim-khalorg'}
```

where `nvim-treesitter` and `nvim-orgmode` are required. Also, make sure you
installed `khalorg`, which can be found here: https://github.com/BartSte/khalorg

==============================================================================
3. Configuration                                            *nvim-khalorg-configuration*

The following configuration options are available through the `khalorg.setup`
fuction:

  calendar - The name of the calendar to use (default: 'default').

Configuring `nvim-khalorg` can be done by placing the following in your
`init.lua`:

```lua
require('khalorg').setup({
    calendar = 'my_calendar'
})
```

where you need to replace `'my_calendar'` with the `khal` calendar you want to
use. You can add the export functions of `nvim-khalorg` to `nvim-orgmode` by
adding the following to your `init.lua`:

```lua
orgmode.setup_ts_grammar()
orgmode.setup({
    org_custom_exports = {
        n = { label = 'Add a new khal item', action = khalorg.new },
        d = { label = 'Delete a khal item', action = khalorg.delete },
        e = { label = 'Edit properties of a khal item', action = khalorg.edit },
        E = { label = 'Edit properties & dates of a khal item', action = khalorg.edit_all }
    }
})
```

==============================================================================
4. Usage                                                    *nvim-khalorg-usage*

After configuring `nvim-khalorg` as is described above, you can access them
through *orgmode-org_export* (default mapping: <leader>oe). More information
can be found by running `:help orgmode-org_export.

==============================================================================
5. Functions                                                *nvim-khalorg-functions*

The following functions are provided that send a fold in an org file to a
khalorg command through stdin:

  khalorg.new()
    Add a new item to khal.

  khalorg.edit_props()
    Edit properties of a khal item, the dates are not updated.

  khalorg.edit_all()
    Edit properties of a khal item together with the dates.

  khalorg.delete()
    Delete a khal item.

The following function is used to create the functions above and can be used to
make your own khalorg export functions.

  khalorg.make_exporter(khalorg_command)
    Returns a function that, when called, does the following:
      1. Get the current fold.
      2. Get the start and end line of the fold.
      3. Get the text of the fold.
      4. Send the text of the fold to khalorg_command through stdin.
    The example below shows how to use this function to create the khalorg.new
    function:

	```lua
	new = khalorg.make_exporter('khalorg new my_calendar')
	```

==============================================================================
6. Troubleshooting                                          *nvim-khalorg-troubleshooting*

If you encounter any issues, please report them on the issue tracker at:

https://github.com/BartSte/nvim-khalorg/issues

If you think the issue arises from khalorg instead of nvim-khalorg, please
report them here:

https://github.com/BartSte/khalorg/issues

==============================================================================
7. Contributing                                             *nvim-khalorg-contributing*

Contributions are welcome! Please see CONTRIBUTING.md for more information.

==============================================================================
8. License                                                  *nvim-khalorg-license*

Distributed under the MIT License.

vim:ft=help:tw=79:ts=8:noet:ft=help:norl:
